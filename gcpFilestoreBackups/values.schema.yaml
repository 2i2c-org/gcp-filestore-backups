# This schema (a jsonschema in YAML format) is used to generate
# values.schema.json which is, when available, used by the helm CLI for client
# side validation by Helm of the chart's values before template rendering.
#
# We look to document everything we have default values for in values.yaml, but
# we don't look to enforce the perfect validation logic within this file.
#
# ref: https://json-schema.org/learn/getting-started-step-by-step.html
#
$schema: http://json-schema.org/draft-07/schema#
type: object
additionalProperties: false
required:
  - filestoreNames
  - project
  - zone
  - serviceAccount
properties:
  enabled: 
    type: [boolean, "null"]
    description: |
      `enabled` is ignored by the chart itself, but a chart depending on this one
      can conditionally make use of this config option as the condition.
  fullnameOverride:
    type: [string, "null"]
    description: |
      fullnameOverride and nameOverride allow you to adjust how the resources
      part of the Helm chart are named.

      Name format               | Resource types | fullnameOverride | nameOverride | Note
      ------------------------- | -------------- | ---------------- | ------------ | -
      component                 | namespaced     | `""`             | *            | Default
      release-component         | cluster wide   | `""`             | *            | Default
      fullname-component        | *              | str              | *            | -
      release-component         | *              | null             | `""`         | -
      release-(name-)component  | *              | null             | str          | omitted if contained in release
      release-(chart-)component | *              | null             | null         | omitted if contained in release

      ```{admonition} Warning!
      :class: warning
      Changing fullnameOverride or nameOverride after the initial installation
      of the chart isn't supported. Changing their values likely leads to a
      reset of non-external JupyterHub databases, abandonment of users' storage,
      and severed couplings to currently running user pods.
      ```

      If you are a developer of a chart depending on this chart, you should
      avoid hardcoding names. If you want to reference the name of a resource in
      this chart from a parent helm chart's template, you can make use of the
      global named templates instead.

      ```yaml
      # some pod definition of a parent chart helm template
      schedulerName: {{ include "jupyterhub.user-scheduler.fullname" . }}
      ```

      To access them from a container, you can also rely on the hub ConfigMap
      that contains entries of all the resource names.

      ```yaml
      # some container definition in a parent chart helm template
      env:
        - name: SCHEDULER_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ include "jupyterhub.user-scheduler.fullname" . }}
              key: user-scheduler
      ```
  nameOverride:
    type: [string, "null"]
    description: |
      See documentation under [`fullnameOverride`](schema_fullnameOverride).
  filestoreNames:
    type: array
    description: |
      The name of one or more GCP FileStore instances to backup
  project:
    type: string
    description: |
      The GCP project the FileStore and backups are stored in
  zone:
    type: string
    description: |
      The GCP zone the FileStore and backups are stored in, e.g., us-central1-b
  serviceAccount:
    type: object
    additionalProperties: false
    description: |
      Information pertaining to the service account that will be created
    required:
      - annotations
    properties:
      annotations:
        type: object
        additionalProperties: true
        description: |
          Dictionary of annotations that can be applied to the service account.

              When used with GKE and Workload Identity, you need to set the
              annotation with the key "iam.gke.io/gcp-service-account" to the email
              address of the Google Service Account whose credentials it should have.
      name:
        type: string
        description: |
          Provide a custom name for the service account
  image:
    type: object
    additionalProperties: false
    required:
      - name
      - tag
    properties:
      name:
        type: string
        description: |
          The name of a publicly available Docker image to run
      tag:
        type: string
        description: |
          A valid tag for the Docker image defined in `image.name`
  podLabels:
    type: object
    additionalProperties: true
    description: |
      blah
  nodeSelector:
    type: object
    additionalProperties: true
    description: |
      An object with key value pairs representing labels. K8s Nodes are
      required to have match all these labels for this Pod to scheduled on
      them.

      ```yaml
      disktype: ssd
      nodetype: awesome
      ```

      See [the Kubernetes
      documentation](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector)
      for more details.     
  tolerations:
    type: array
    description: |
      Tolerations allow a pod to be scheduled on nodes with taints.

      Pass this field an array of
      [`Toleration`](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#toleration-v1-core)
      objects.

      See the [Kubernetes
      docs](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/)
      for more info.
  affinity:
    type: object
    additionalProperties: false
    description: |
      Affinities describe where pods prefer or require to be scheduled, they
      may prefer or require a node where they are to be scheduled to have a
      certain label (node affinity). They may also require to be scheduled
      in proximity or with a lack of proximity to another pod (pod affinity
      and anti pod affinity).

      See the [Kubernetes
      docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/)
      for more info.
